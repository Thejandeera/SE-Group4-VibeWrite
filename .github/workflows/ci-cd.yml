name: CI/CD Pipeline

on:
  push:
    branches:
      - main  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2. Set up Java 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Debug directory (optional, useful for troubleshooting)
      - name: Debug Directory Structure
        run: |
          echo "Current working directory: $(pwd)"
          echo "Root contents:"
          ls -la
          echo "Finding pom.xml files:"
          find . -name "pom.xml" -type f

      # 4. Build Maven project in backend
      - name: Build Maven Project
        working-directory: backend
        run: |
          echo "Maven working directory: $(pwd)"
          ls -la
          mvn clean package -DskipTests

      # 5. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 6. Build Docker image
      - name: Build Docker Image
        working-directory: backend
        run: |
          echo "Docker build directory: $(pwd)"
          ls -la
          docker build -t vibewrite-app:latest .

      # 7. Tag and push Docker image
      - name: Push Docker Image
        run: |
          docker tag vibewrite-app:latest ${{ secrets.DOCKER_USERNAME }}/vibewrite-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/vibewrite-app:latest

      - name: Trigger Render Deploy
        run: |
          curl -X POST https://api.render.com/v1/services/srv-d2mq8195pdvs73969mug/deploys \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Content-Type: application/json"
